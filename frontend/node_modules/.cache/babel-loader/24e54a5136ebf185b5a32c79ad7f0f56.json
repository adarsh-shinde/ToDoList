{"ast":null,"code":"var _jsxFileName = \"D:\\\\Adarsh\\\\Practices\\\\Programming practice\\\\MERN Stack\\\\Own\\\\To do List\\\\frontend\\\\src\\\\components\\\\TodoForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useTodosContext } from \"../hooks/useTodosContext.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoForm = () => {\n  _s();\n  const {\n    dispatch\n  } = useTodosContext();\n  const [title, setTitle] = useState('');\n  const [details, setDetails] = useState('');\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const todo = {\n      title,\n      details\n    };\n    o;\n    const response = await fetch('/api/todos', {\n      method: 'POST',\n      body: JSON.stringify(todo),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.error);\n      setEmptyFields(json.emptyFields);\n    }\n    if (response.ok) {\n      setTitle('');\n      setDetails('');\n      setError(null);\n      setEmptyFields([]);\n      // console.log('New Todo Added',json);\n      dispatch({\n        type: 'CREATE_TODO',\n        payload: json\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"create\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add new Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Title:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setTitle(e.target.value),\n      value: title,\n      className: emptyFields.includes('title') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Details:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setDetails(e.target.value),\n      value: details,\n      className: emptyFields.includes('details') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoForm, \"SnpAUHR1NgdHMnsOeWoN7HR601k=\", false, function () {\n  return [useTodosContext];\n});\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["useState","useTodosContext","TodoForm","dispatch","title","setTitle","details","setDetails","error","setError","emptyFields","setEmptyFields","handleSubmit","e","preventDefault","todo","o","response","fetch","method","body","JSON","stringify","headers","user","token","json","ok","type","payload","target","value","includes"],"sources":["D:/Adarsh/Practices/Programming practice/MERN Stack/Own/To do List/frontend/src/components/TodoForm.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useTodosContext } from \"../hooks/useTodosContext.js\";\r\n\r\nconst TodoForm = () => {\r\n    const {dispatch} =  useTodosContext();\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [details, setDetails] = useState('');\r\n    const [error, setError] = useState(null);\r\n    const [emptyFields, setEmptyFields] = useState([])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const todo = { title, details }\r\n        o\r\n\r\n        const response = await fetch('/api/todos', {\r\n            method: 'POST',\r\n            body: JSON.stringify(todo),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        })\r\n        const json = await response.json();\r\n\r\n        if(!response.ok){\r\n            setError(json.error)\r\n            setEmptyFields(json.emptyFields)\r\n        }\r\n        if(response.ok){\r\n            setTitle('');\r\n            setDetails('');\r\n            setError(null);\r\n            setEmptyFields([]);\r\n            // console.log('New Todo Added',json);\r\n            dispatch({type:'CREATE_TODO', payload: json})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"create\" onSubmit={handleSubmit}>\r\n            <h3>Add new Todo</h3>\r\n\r\n            <label>Title:</label>\r\n            <input\r\n                type=\"text\"    \r\n                onChange={(e) => setTitle(e.target.value)}\r\n                value={title}\r\n                className= {emptyFields.includes('title') ? 'error': ''}\r\n            />\r\n            <label>Details:</label>\r\n            <input\r\n                type=\"text\"\r\n                onChange={(e) => setDetails(e.target.value)}\r\n                value={details}\r\n                className= {emptyFields.includes('details') ? 'error': ''}\r\n            />\r\n            <button>Submit</button>\r\n            {error && <div className=\"error\">{error}</div>}\r\n\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,eAAe,QAAQ,6BAA6B;AAAC;AAE9D,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAM;IAACC;EAAQ,CAAC,GAAIF,eAAe,EAAE;EAErC,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,EAAE;IAElB,MAAMC,IAAI,GAAG;MAAEX,KAAK;MAAEE;IAAQ,CAAC;IAC/BU,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;MACvCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC;MAC1BQ,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASC,IAAI,CAACC,KAAM;MAC1C;IACJ,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACS,IAAI,EAAE;IAElC,IAAG,CAACT,QAAQ,CAACU,EAAE,EAAC;MACZlB,QAAQ,CAACiB,IAAI,CAAClB,KAAK,CAAC;MACpBG,cAAc,CAACe,IAAI,CAAChB,WAAW,CAAC;IACpC;IACA,IAAGO,QAAQ,CAACU,EAAE,EAAC;MACXtB,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,EAAE,CAAC;MACdE,QAAQ,CAAC,IAAI,CAAC;MACdE,cAAc,CAAC,EAAE,CAAC;MAClB;MACAR,QAAQ,CAAC;QAACyB,IAAI,EAAC,aAAa;QAAEC,OAAO,EAAEH;MAAI,CAAC,CAAC;IACjD;EACJ,CAAC;EAED,oBACI;IAAM,SAAS,EAAC,QAAQ;IAAC,QAAQ,EAAEd,YAAa;IAAA,wBAC5C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB,eAErB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB,eACrB;MACI,IAAI,EAAC,MAAM;MACX,QAAQ,EAAGC,CAAC,IAAKR,QAAQ,CAACQ,CAAC,CAACiB,MAAM,CAACC,KAAK,CAAE;MAC1C,KAAK,EAAE3B,KAAM;MACb,SAAS,EAAGM,WAAW,CAACsB,QAAQ,CAAC,OAAO,CAAC,GAAG,OAAO,GAAE;IAAG;MAAA;MAAA;MAAA;IAAA,QAC1D,eACF;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB,eACvB;MACI,IAAI,EAAC,MAAM;MACX,QAAQ,EAAGnB,CAAC,IAAKN,UAAU,CAACM,CAAC,CAACiB,MAAM,CAACC,KAAK,CAAE;MAC5C,KAAK,EAAEzB,OAAQ;MACf,SAAS,EAAGI,WAAW,CAACsB,QAAQ,CAAC,SAAS,CAAC,GAAG,OAAO,GAAE;IAAG;MAAA;MAAA;MAAA;IAAA,QAC5D,eACF;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB,EACtBxB,KAAK,iBAAI;MAAK,SAAS,EAAC,OAAO;MAAA,UAAEA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAE3C;AAEf,CAAC;AAAA,GA7DKN,QAAQ;EAAA,QACUD,eAAe;AAAA;AAAA,KADjCC,QAAQ;AA+Dd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}