{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nexport const useLogin = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setisLoading] = useState(false);\n  const {\n    dispatch\n  } = useAuthContext();\n  const login = async (email, password) => {\n    setisLoading(true);\n    setError(null);\n    const response = await fetch('/api/user/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setisLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      // save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json));\n\n      // update the authContext\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setisLoading(false);\n    }\n  };\n  return {\n    login,\n    isLoading,\n    error\n  };\n};\n_s(useLogin, \"e7v8WtoXQRAFXxirO/vmiiugPCo=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useLogin","error","setError","isLoading","setisLoading","dispatch","login","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["D:/Adarsh/Practices/Programming practice/MERN Stack/Own/To do List/frontend/src/hooks/useLogin.js"],"sourcesContent":["import {useState} from 'react';\r\nimport {useAuthContext} from './useAuthContext';\r\n\r\nexport const useLogin = () =>{ \r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const {dispatch} = useAuthContext()\r\n\r\n    const login = async (email, password) =>{\r\n        setisLoading(true);\r\n        setError(null);\r\n\r\n        const response = await fetch('/api/user/login',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({email, password})\r\n        })\r\n\r\n        const json = await response.json();\r\n\r\n        if(!response.ok){\r\n            setisLoading(false);\r\n            setError(json.error)\r\n        }\r\n        if(response.ok){\r\n            // save the user to local storage\r\n            localStorage.setItem('user', JSON.stringify(json))\r\n\r\n            // update the authContext\r\n            dispatch({type:'LOGIN', payload: json})\r\n\r\n            setisLoading(false);\r\n        }\r\n    }\r\n\r\n    return{login, isLoading, error}\r\n} "],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,SAAQC,cAAc,QAAO,kBAAkB;AAE/C,OAAO,MAAMC,QAAQ,GAAG,MAAK;EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAACO;EAAQ,CAAC,GAAGN,cAAc,EAAE;EAEnC,MAAMO,KAAK,GAAG,OAAOC,KAAK,EAAEC,QAAQ,KAAI;IACpCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAC;MAC3CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACR,KAAK;QAAEC;MAAQ,CAAC;IAC1C,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,EAAE;IAElC,IAAG,CAACP,QAAQ,CAACQ,EAAE,EAAC;MACZb,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC;IACxB;IACA,IAAGQ,QAAQ,CAACQ,EAAE,EAAC;MACX;MACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAElD;MACAX,QAAQ,CAAC;QAACe,IAAI,EAAC,OAAO;QAAEC,OAAO,EAAEL;MAAI,CAAC,CAAC;MAEvCZ,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,OAAM;IAACE,KAAK;IAAEH,SAAS;IAAEF;EAAK,CAAC;AACnC,CAAC;AAAA,GAnCYD,QAAQ;EAAA,QAGED,cAAc;AAAA"},"metadata":{},"sourceType":"module"}